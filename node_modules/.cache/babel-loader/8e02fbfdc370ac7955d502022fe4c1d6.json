{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/albert/Desktop/-/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";export var TETRIMINOS={I:[//I\n[[1,1,1,1],[0,0,0,0]],[[0,0,1,0],[0,0,1,0],[0,0,1,0],[0,0,1,0]],[[0,0,0,0],[0,0,0,0],[1,1,1,1],[0,0,0,0]],[[0,1,0,0],[0,1,0,0],[0,1,0,0],[0,1,0,0]]],T:[//T\n[[0,1,0],[1,1,1]],[[0,1,0],[0,1,1],[0,1,0]],[[0,0,0],[1,1,1],[0,1,0]],[[0,1,0],[1,1,0],[0,1,0]]],L:[//L\n[[0,0,1],[1,1,1]],[[0,1,0],[0,1,0],[0,1,1]],[[0,0,0],[1,1,1],[1,0,0]],[[1,1,0],[0,1,0],[0,1,0]]],J:[//J\n[[1,0,0],[1,1,1]],[[0,1,1],[0,1,0],[0,1,0]],[[0,0,0],[1,1,1],[0,0,1]],[[0,1,0],[0,1,0],[1,1,0]]],Z:[//Z\n[[1,1,0],[0,1,1]],[[0,0,1],[0,1,1],[0,1,0]],[[0,0,0],[1,1,0],[0,1,1]],[[0,1,0],[1,1,0],[1,0,0]]],S:[//S\n[[0,1,1],[1,1,0]],[[0,1,0],[0,1,1],[0,0,1]],[[0,0,0],[0,1,1],[1,1,0]],[[1,0,0],[1,1,0],[0,1,0]]],O:[//O\n[[0,1,1],[0,1,1]],[[0,1,1],[0,1,1]],[[0,1,1],[0,1,1]],[[0,1,1],[0,1,1]]]};export var getRandomPiece=function getRandomPiece(){var value=Math.round(6*Math.random());switch(value){case 0:return\"I\";case 1:return\"T\";case 2:return\"L\";case 3:return\"J\";case 4:return\"Z\";case 5:return\"S\";case 6:return\"O\";}};export var getPiece=function getPiece(type,rotatePos,xPos,yPos){return TETRIMINOS[type][rotatePos].map(function(row,rowPos){return row.map(function(col,colPos){if(col){return{x:xPos+colPos,y:yPos+rowPos};}return null;});});};export var rotatePiece=function rotatePiece(isCounterClockwise,_ref){var type=_ref.type,rotatePos=_ref.rotatePos;return isCounterClockwise?rotatePos===0?TETRIMINOS[type].length-1:rotatePos-1:rotatePos===TETRIMINOS[type].length-1?0:rotatePos+1;};export var convertMappingToCoords=function convertMappingToCoords(mapping){var coordArray=[];var _iterator=_createForOfIteratorHelper(mapping),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var array=_step.value;var _iterator2=_createForOfIteratorHelper(array),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var coord=_step2.value;if(coord){coordArray.push(coord);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return coordArray;};","map":{"version":3,"names":["TETRIMINOS","I","T","L","J","Z","S","O","getRandomPiece","value","Math","round","random","getPiece","type","rotatePos","xPos","yPos","map","row","rowPos","col","colPos","x","y","rotatePiece","isCounterClockwise","length","convertMappingToCoords","mapping","coordArray","array","coord","push"],"sources":["/Users/albert/Desktop/-/src/Components/Multiplayer/Components/Tetrimino.js"],"sourcesContent":["export const TETRIMINOS = {\n  I: [\n    //I\n    [\n      [1, 1, 1, 1],\n      [0, 0, 0, 0],\n    ],\n    [\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n    ],\n    [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n      [0, 0, 0, 0],\n    ],\n    [\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n    ],\n  ],\n\n  T: [\n    //T\n    [\n      [0, 1, 0],\n      [1, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n  ],\n  L: [\n    //L\n    [\n      [0, 0, 1],\n      [1, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 1],\n      [1, 0, 0],\n    ],\n    [\n      [1, 1, 0],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n  ],\n  J: [\n    //J\n    [\n      [1, 0, 0],\n      [1, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 0, 1],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0],\n    ],\n  ],\n  Z: [\n    //Z\n    [\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 0, 1],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 0],\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [1, 0, 0],\n    ],\n  ],\n  S: [\n    //S\n    [\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 0, 1],\n    ],\n    [\n      [0, 0, 0],\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    [\n      [1, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n  ],\n  O: [\n    //O\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 1],\n    ],\n  ],\n};\n\nexport const getRandomPiece = () => {\n  const value = Math.round(6 * Math.random());\n  switch (value) {\n    case 0:\n      return \"I\";\n    case 1:\n      return \"T\";\n    case 2:\n      return \"L\";\n    case 3:\n      return \"J\";\n    case 4:\n      return \"Z\";\n    case 5:\n      return \"S\";\n    case 6:\n      return \"O\";\n  }\n};\n\nexport const getPiece = (type, rotatePos, xPos, yPos) =>\n  TETRIMINOS[type][rotatePos].map((row, rowPos) =>\n    row.map((col, colPos) => {\n      if (col) {\n        return { x: xPos + colPos, y: yPos + rowPos };\n      }\n      return null;\n    })\n  );\n\nexport const rotatePiece = (isCounterClockwise, { type, rotatePos }) => {\n  return isCounterClockwise\n    ? rotatePos === 0\n      ? TETRIMINOS[type].length - 1\n      : rotatePos - 1\n    : rotatePos === TETRIMINOS[type].length - 1\n    ? 0\n    : rotatePos + 1;\n};\n\nexport const convertMappingToCoords = (mapping) => {\n  let coordArray = [];\n  for (const array of mapping) {\n    for (const coord of array) {\n      if (coord) {\n        coordArray.push(coord);\n      }\n    }\n  }\n  return coordArray;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}