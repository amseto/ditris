{"ast":null,"code":"import{memo}from\"react\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";var LineClearedCounter=function LineClearedCounter(_ref){var player=_ref.player;var opponentCounter=useSelector(function(state){return state.gameState2.opponentLinesCleared;});var myCounter=useSelector(function(state){return state.gameState2.myLinesCleared;});if(player===\"opponent\"){return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"flex-end\"},children:opponentCounter});}if(player===\"mine\"){return/*#__PURE__*/_jsx(\"div\",{children:myCounter});}};export default/*#__PURE__*/memo(LineClearedCounter);","map":{"version":3,"names":["memo","useSelector","LineClearedCounter","player","opponentCounter","state","gameState2","opponentLinesCleared","myCounter","myLinesCleared","display","justifyContent"],"sources":["/Users/albert/Desktop/-/src/Components/Multiplayer/Components/LineClearedCounter.js"],"sourcesContent":["import { memo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst LineClearedCounter = ({ player }) => {\n   const opponentCounter = useSelector((state) => state.gameState2.opponentLinesCleared);\n   const myCounter = useSelector((state) => state.gameState2.myLinesCleared);\n   if (player === \"opponent\") {\n      return <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>{opponentCounter}</div>;\n   }\n   if (player === \"mine\") {\n      return <div>{myCounter}</div>;\n   }\n};\n\nexport default memo(LineClearedCounter);\n"],"mappings":"AAAA,OAASA,IAAT,KAAqB,OAArB,CACA,OAASC,WAAT,KAA4B,aAA5B,C,2CAEA,GAAMC,mBAAkB,CAAG,QAArBA,mBAAqB,MAAgB,IAAbC,OAAa,MAAbA,MAAa,CACxC,GAAMC,gBAAe,CAAGH,WAAW,CAAC,SAACI,KAAD,QAAWA,MAAK,CAACC,UAAN,CAAiBC,oBAA5B,EAAD,CAAnC,CACA,GAAMC,UAAS,CAAGP,WAAW,CAAC,SAACI,KAAD,QAAWA,MAAK,CAACC,UAAN,CAAiBG,cAA5B,EAAD,CAA7B,CACA,GAAIN,MAAM,GAAK,UAAf,CAA2B,CACxB,mBAAO,YAAK,KAAK,CAAE,CAAEO,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,UAAnC,CAAZ,UAA8DP,eAA9D,EAAP,CACF,CACD,GAAID,MAAM,GAAK,MAAf,CAAuB,CACpB,mBAAO,qBAAMK,SAAN,EAAP,CACF,CACH,CATD,CAWA,2BAAeR,IAAI,CAACE,kBAAD,CAAnB"},"metadata":{},"sourceType":"module"}