{"ast":null,"code":"import _slicedToArray from\"/Users/albert/Desktop/-/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Fragment,useEffect,useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{gameStateActions}from\"../../store/GameState\";import Grid from\"./Grid\";import PieceQueue from\"./PieceQueue\";import HeldBlock from\"./HeldBlock\";import{keyShiftCounter,keyIsPressed,keyIsDisabled}from\"../../modules/KeyControls\";import KeyControls from\"../../modules/KeyControls\";import HowToPlay from\"./HowToPlay\";import StopWatch from\"./StopWatch\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var gameLocked=false;var Game=function Game(){var dispatch=useDispatch();var gameRunning=useSelector(function(state){return state.gameState.gameRunning;});var currentPieceState=useSelector(function(state){return state.gameState.currentPieceState;});var displayMessage=useSelector(function(state){return state.gameState.displayMessage;});var controls=useSelector(function(state){return state.controls;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),startGame=_useState2[0],setStartGame=_useState2[1];var gameLoop=function gameLoop(){if(gameRunning){if(currentPieceState===\"FROZEN\"){dispatch(gameStateActions.clearLines());dispatch(gameStateActions.checkIfGameWon());dispatch(gameStateActions.getNewPiece());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());}else{dispatch(gameStateActions.dropPiece());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());}}};useEffect(function(){var dropPieceInterval=window.setInterval(function(){gameLoop();},300);var handleInputInterval=window.setInterval(function(){keyHandler();},1);var shiftInputInterval=window.setInterval(function(){keyShiftHandler();},1);return function(){window.clearInterval(dropPieceInterval);window.clearInterval(handleInputInterval);window.clearInterval(shiftInputInterval);};});useEffect(function(){if(startGame){var interval=window.setInterval(function(){dispatch(gameStateActions.gettingReady());},500);return function(){window.clearInterval(interval);};}},[displayMessage,dispatch,startGame]);var keyShiftHandler=function keyShiftHandler(){if(!gameRunning||gameLocked){return;}for(var key in keyShiftCounter){if(keyShiftCounter[key]){keyShiftCounter[key]+=1;}}if(keyIsPressed[controls.softDrop]&&keyIsDisabled[controls.softDrop]&&keyShiftCounter[controls.softDrop]>40){dispatch(gameStateActions.dropPiece());keyIsDisabled[controls.softDrop]=true;keyShiftCounter[controls.softDrop]=30;}if(keyIsPressed[controls.moveRight]&&keyIsDisabled[controls.moveRight]&&keyShiftCounter[controls.moveRight]>40){dispatch(gameStateActions.shiftRight());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());keyIsDisabled[controls.moveRight]=true;keyShiftCounter[controls.moveRight]=30;}if(keyIsPressed[controls.moveLeft]&&keyIsDisabled[controls.moveLeft]&&keyShiftCounter[controls.moveLeft]>40){dispatch(gameStateActions.shiftLeft());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());keyIsDisabled[controls.moveLeft]=true;keyShiftCounter[controls.moveLeft]=30;}};var keyHandler=function keyHandler(){if(!gameRunning||gameLocked){return;}if(keyIsPressed[controls.rotateLeft]&&!keyIsDisabled[controls.rotateLeft]){dispatch(gameStateActions.rotatePiece(true));dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());keyIsDisabled[controls.rotateLeft]=true;}if(keyIsPressed[controls.rotateRight]&&!keyIsDisabled[controls.rotateRight]){dispatch(gameStateActions.rotatePiece(false));dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());keyIsDisabled[controls.rotateRight]=true;}if(keyIsPressed[controls.hardDrop]&&!keyIsDisabled[controls.hardDrop]){gameLocked=true;dispatch(gameStateActions.hardDrop());keyIsDisabled[controls.hardDrop]=true;setTimeout(function(){gameLocked=false;},350);}if(keyIsPressed[controls.hold]&&!keyIsDisabled[controls.hold]){dispatch(gameStateActions.holdPiece());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());keyIsDisabled[controls.hold]=true;}if(keyIsPressed[controls.softDrop]&&!keyIsDisabled[controls.softDrop]){keyShiftCounter[controls.softDrop]=1;dispatch(gameStateActions.dropPiece());keyIsDisabled[controls.softDrop]=true;}if(keyIsPressed[controls.moveRight]&&!keyIsDisabled[controls.moveRight]){keyShiftCounter[controls.moveRight]=1;dispatch(gameStateActions.shiftRight());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());keyIsDisabled[controls.moveRight]=true;}if(keyIsPressed[controls.moveLeft]&&!keyIsDisabled[controls.moveLeft]){keyShiftCounter[controls.moveLeft]=1;dispatch(gameStateActions.shiftLeft());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());keyIsDisabled[controls.moveLeft]=true;}};document.onkeydown=function(keycode){if(keycode.key===controls.newGame){setStartGame(true);dispatch(gameStateActions.newGame());dispatch(gameStateActions.getGhostCoords());dispatch(gameStateActions.showGhostPiece());}};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(KeyControls,{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexWrap:\"nowrap\"},children:[/*#__PURE__*/_jsx(HeldBlock,{}),/*#__PURE__*/_jsx(Grid,{}),/*#__PURE__*/_jsx(PieceQueue,{})]}),/*#__PURE__*/_jsx(StopWatch,{}),/*#__PURE__*/_jsx(HowToPlay,{})]});};export default Game;","map":{"version":3,"names":["Fragment","useEffect","useState","useSelector","useDispatch","gameStateActions","Grid","PieceQueue","HeldBlock","keyShiftCounter","keyIsPressed","keyIsDisabled","KeyControls","HowToPlay","StopWatch","gameLocked","Game","dispatch","gameRunning","state","gameState","currentPieceState","displayMessage","controls","startGame","setStartGame","gameLoop","clearLines","checkIfGameWon","getNewPiece","getGhostCoords","showGhostPiece","dropPiece","dropPieceInterval","window","setInterval","handleInputInterval","keyHandler","shiftInputInterval","keyShiftHandler","clearInterval","interval","gettingReady","key","softDrop","moveRight","shiftRight","moveLeft","shiftLeft","rotateLeft","rotatePiece","rotateRight","hardDrop","setTimeout","hold","holdPiece","document","onkeydown","keycode","newGame","display","flexWrap"],"sources":["/Users/albert/Desktop/-/src/Components/GameUI/Game.js"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { gameStateActions } from \"../../store/GameState\";\nimport Grid from \"./Grid\";\nimport PieceQueue from \"./PieceQueue\";\nimport HeldBlock from \"./HeldBlock\";\n\nimport { keyShiftCounter, keyIsPressed, keyIsDisabled } from \"../../modules/KeyControls\";\nimport KeyControls from \"../../modules/KeyControls\";\nimport HowToPlay from \"./HowToPlay\";\nimport StopWatch from \"./StopWatch\";\n\nlet gameLocked = false;\n\nconst Game = () => {\n   const dispatch = useDispatch();\n   const gameRunning = useSelector((state) => state.gameState.gameRunning);\n   const currentPieceState = useSelector((state) => state.gameState.currentPieceState);\n   const displayMessage = useSelector((state) => state.gameState.displayMessage);\n   const controls = useSelector((state)=>state.controls)\n\n   const [startGame, setStartGame] = useState(false);\n\n   const gameLoop = () => {\n      if (gameRunning) {\n         if (currentPieceState === \"FROZEN\") {\n            dispatch(gameStateActions.clearLines());\n            dispatch(gameStateActions.checkIfGameWon());\n            dispatch(gameStateActions.getNewPiece());\n            dispatch(gameStateActions.getGhostCoords());\n            dispatch(gameStateActions.showGhostPiece());\n         } else {\n            dispatch(gameStateActions.dropPiece());\n            dispatch(gameStateActions.getGhostCoords());\n            dispatch(gameStateActions.showGhostPiece());\n         }\n      }\n   };\n   useEffect(() => {\n      const dropPieceInterval = window.setInterval(() => {\n         gameLoop();\n      }, 300);\n      const handleInputInterval = window.setInterval(() => {\n         keyHandler();\n      }, 1);\n      const shiftInputInterval = window.setInterval(() => {\n         keyShiftHandler();\n      }, 1);\n\n      return () => {\n         window.clearInterval(dropPieceInterval);\n         window.clearInterval(handleInputInterval);\n         window.clearInterval(shiftInputInterval);\n      };\n   });\n   useEffect(() => {\n      if (startGame) {\n         const interval = window.setInterval(() => {\n            dispatch(gameStateActions.gettingReady());\n         }, 500);\n         return () => {\n            window.clearInterval(interval);\n         };\n      }\n   }, [displayMessage, dispatch, startGame]);\n\n   const keyShiftHandler = () => {\n      if (!gameRunning || gameLocked) {\n         return;\n      }\n      for (let key in keyShiftCounter) {\n         if (keyShiftCounter[key]) {\n            keyShiftCounter[key] += 1;\n         }\n      }\n      if (\n         keyIsPressed[controls.softDrop] &&\n         keyIsDisabled[controls.softDrop] &&\n         keyShiftCounter[controls.softDrop] > 40\n      ) {\n         dispatch(gameStateActions.dropPiece());\n         keyIsDisabled[controls.softDrop] = true;\n         keyShiftCounter[controls.softDrop] = 30;\n      }\n      if (\n         keyIsPressed[controls.moveRight] &&\n         keyIsDisabled[controls.moveRight] &&\n         keyShiftCounter[controls.moveRight] > 40\n      ) {\n         dispatch(gameStateActions.shiftRight());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[controls.moveRight] = true;\n         keyShiftCounter[controls.moveRight] = 30;\n      }\n      if (\n         keyIsPressed[controls.moveLeft] &&\n         keyIsDisabled[controls.moveLeft] &&\n         keyShiftCounter[controls.moveLeft] > 40\n      ) {\n         dispatch(gameStateActions.shiftLeft());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[controls.moveLeft] = true;\n         keyShiftCounter[controls.moveLeft] = 30;\n      }\n   };\n   const keyHandler = () => {\n      if (!gameRunning || gameLocked) {\n         return;\n      }\n      if (keyIsPressed[controls.rotateLeft] && !keyIsDisabled[controls.rotateLeft]) {\n         dispatch(gameStateActions.rotatePiece(true));\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[controls.rotateLeft] = true;\n      }\n      if (keyIsPressed[controls.rotateRight] && !keyIsDisabled[controls.rotateRight]) {\n         dispatch(gameStateActions.rotatePiece(false));\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[controls.rotateRight] = true;\n      }\n      if (keyIsPressed[controls.hardDrop] && !keyIsDisabled[controls.hardDrop]) {\n         gameLocked = true;\n         dispatch(gameStateActions.hardDrop());\n         keyIsDisabled[controls.hardDrop] = true;\n         setTimeout(() => {\n            gameLocked = false;\n         }, 350);\n      }\n      if (keyIsPressed[controls.hold] && !keyIsDisabled[controls.hold]) {\n         dispatch(gameStateActions.holdPiece());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[controls.hold] = true;\n      }\n      if (keyIsPressed[controls.softDrop] && !keyIsDisabled[controls.softDrop]) {\n         keyShiftCounter[controls.softDrop] = 1;\n         dispatch(gameStateActions.dropPiece());\n         keyIsDisabled[controls.softDrop] = true;\n      }\n      if (keyIsPressed[controls.moveRight] && !keyIsDisabled[controls.moveRight]) {\n         keyShiftCounter[controls.moveRight] = 1;\n         dispatch(gameStateActions.shiftRight());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[controls.moveRight] = true;\n      }\n      if (keyIsPressed[controls.moveLeft] && !keyIsDisabled[controls.moveLeft]) {\n         keyShiftCounter[controls.moveLeft] = 1;\n         dispatch(gameStateActions.shiftLeft());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n         keyIsDisabled[controls.moveLeft] = true;\n      }\n   };\n   document.onkeydown = (keycode) => {\n      if (keycode.key === controls.newGame) {\n         setStartGame(true);\n         dispatch(gameStateActions.newGame());\n         dispatch(gameStateActions.getGhostCoords());\n         dispatch(gameStateActions.showGhostPiece());\n      }\n   };\n   return (\n      <Fragment>\n         <KeyControls />\n         <div\n            style={{\n               display: \"flex\",\n               flexWrap:\"nowrap\"\n            }}\n         >\n            <HeldBlock />\n            <Grid></Grid>\n            <PieceQueue />\n         </div>\n         <StopWatch></StopWatch>\n         <HowToPlay></HowToPlay>\n      </Fragment>\n   );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}